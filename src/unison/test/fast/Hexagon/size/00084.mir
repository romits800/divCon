--- |
  ; ModuleID = '00084.ll'
  source_filename = "./tests/single-exec/00084.c"
  target datalayout = "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048"
  target triple = "hexagon"
  
  ; Function Attrs: norecurse nounwind readnone
  define dso_local i32 @none() local_unnamed_addr #0 {
  entry:
    ret i32 0
  }
  
  ; Function Attrs: norecurse nounwind readnone
  define dso_local i32 @one(i32 %a) local_unnamed_addr #0 {
  entry:
    %cmp = icmp ne i32 %a, 1
    %. = zext i1 %cmp to i32
    ret i32 %.
  }
  
  ; Function Attrs: norecurse nounwind readnone
  define dso_local i32 @two(i32 %a, i32 %b) local_unnamed_addr #0 {
  entry:
    %cmp = icmp ne i32 %a, 1
    %cmp1 = icmp ne i32 %b, 2
    %narrow = or i1 %cmp, %cmp1
    %retval.0 = zext i1 %narrow to i32
    ret i32 %retval.0
  }
  
  ; Function Attrs: norecurse nounwind readnone
  define dso_local i32 @three(i32 %a, i32 %b, i32 %c) local_unnamed_addr #0 {
  entry:
    %cmp = icmp ne i32 %a, 1
    %cmp1 = icmp ne i32 %b, 2
    %cmp4 = icmp ne i32 %c, 3
    %not.or.cond = or i1 %cmp, %cmp1
    %narrow = or i1 %cmp4, %not.or.cond
    %retval.0 = zext i1 %narrow to i32
    ret i32 %retval.0
  }
  
  ; Function Attrs: norecurse nounwind readnone
  define dso_local i32 @main() local_unnamed_addr #0 {
  return:
    ret i32 0
  }
  
  attributes #0 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 9.0.0 (http://llvm.org/git/clang.git 4e215e73ed6b499f3ccf23263c96cd188e0eda2c) (git@github.com:unison-code/llvm.git 9914ec00db7eeaf764045b9071638c2421cd32e7)"}

...
---
name:            none
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 8):
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x7e93a30> = !{!"unison-block-frequency", i64 8}
    %0:intregs = A2_tfrsi 0
    $r0 = COPY killed %0
    PS_jmpret $r31, implicit-def dead $pc, implicit killed $r0

...
---
name:            one
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
  - { id: 1, class: intregs, preferred-register: '' }
liveins:         
  - { reg: '$r0', virtual-reg: '%0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 8):
    liveins: $r0
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x7e93a30> = !{!"unison-block-frequency", i64 8}
    %0:intregs = COPY killed $r0
    %1:intregs = A4_rcmpneqi killed %0, 1
    $r0 = COPY killed %1
    PS_jmpret $r31, implicit-def dead $pc, implicit killed $r0

...
---
name:            two
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
  - { id: 1, class: intregs, preferred-register: '' }
  - { id: 2, class: predregs, preferred-register: '' }
  - { id: 3, class: predregs, preferred-register: '' }
  - { id: 4, class: predregs, preferred-register: '' }
  - { id: 5, class: predregs, preferred-register: '' }
  - { id: 6, class: predregs, preferred-register: '' }
  - { id: 7, class: intregs, preferred-register: '' }
liveins:         
  - { reg: '$r0', virtual-reg: '%0' }
  - { reg: '$r1', virtual-reg: '%1' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 8):
    liveins: $r0, $r1
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x7e93a30> = !{!"unison-block-frequency", i64 8}
    %1:intregs = COPY killed $r1
    %0:intregs = COPY killed $r0
    %2:predregs = C2_cmpeqi killed %0, 1
    %3:predregs = C2_not killed %2
    %4:predregs = C2_cmpeqi killed %1, 2
    %5:predregs = C2_not killed %4
    %6:predregs = C2_or killed %3, killed %5
    %7:intregs = C2_muxii killed %6, 1, 0
    $r0 = COPY killed %7
    PS_jmpret $r31, implicit-def dead $pc, implicit killed $r0

...
---
name:            three
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
  - { id: 1, class: intregs, preferred-register: '' }
  - { id: 2, class: intregs, preferred-register: '' }
  - { id: 3, class: predregs, preferred-register: '' }
  - { id: 4, class: predregs, preferred-register: '' }
  - { id: 5, class: predregs, preferred-register: '' }
  - { id: 6, class: predregs, preferred-register: '' }
  - { id: 7, class: predregs, preferred-register: '' }
  - { id: 8, class: predregs, preferred-register: '' }
  - { id: 9, class: predregs, preferred-register: '' }
  - { id: 10, class: intregs, preferred-register: '' }
liveins:         
  - { reg: '$r0', virtual-reg: '%0' }
  - { reg: '$r1', virtual-reg: '%1' }
  - { reg: '$r2', virtual-reg: '%2' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 8):
    liveins: $r0, $r1, $r2
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x7e93a30> = !{!"unison-block-frequency", i64 8}
    %2:intregs = COPY killed $r2
    %1:intregs = COPY killed $r1
    %0:intregs = COPY killed $r0
    %3:predregs = C2_cmpeqi killed %0, 1
    %4:predregs = C2_not killed %3
    %5:predregs = C2_cmpeqi killed %1, 2
    %6:predregs = C2_not killed %5
    %7:predregs = C2_cmpeqi killed %2, 3
    %8:predregs = C2_not killed %7
    %9:predregs = C4_or_or killed %8, killed %4, killed %6
    %10:intregs = C2_muxii killed %9, 1, 0
    $r0 = COPY killed %10
    PS_jmpret $r31, implicit-def dead $pc, implicit killed $r0

...
---
name:            main
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.return (freq 8):
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x7e93a30> = !{!"unison-block-frequency", i64 8}
    %0:intregs = A2_tfrsi 0
    $r0 = COPY killed %0
    PS_jmpret $r31, implicit-def dead $pc, implicit killed $r0

...
