--- |
  ; ModuleID = '00091.ll'
  source_filename = "./tests/single-exec/00091.c"
  target datalayout = "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048"
  target triple = "hexagon"
  
  %struct.S = type { i32, [2 x i32] }
  
  @a = dso_local local_unnamed_addr global [1 x %struct.S] [%struct.S { i32 1, [2 x i32] [i32 2, i32 3] }], align 8
  
  ; Function Attrs: norecurse nounwind readonly
  define dso_local i32 @main() local_unnamed_addr #0 {
  entry:
    %0 = load i32, i32* getelementptr inbounds ([1 x %struct.S], [1 x %struct.S]* @a, i32 0, i32 0, i32 0), align 8, !tbaa !2
    %cmp = icmp eq i32 %0, 1
    br i1 %cmp, label %if.end, label %return
  
  if.end:                                           ; preds = %entry
    %1 = load i32, i32* getelementptr inbounds ([1 x %struct.S], [1 x %struct.S]* @a, i32 0, i32 0, i32 1, i32 0), align 4, !tbaa !7
    %cmp1 = icmp eq i32 %1, 2
    br i1 %cmp1, label %if.end3, label %return
  
  if.end3:                                          ; preds = %if.end
    %2 = load i32, i32* getelementptr inbounds ([1 x %struct.S], [1 x %struct.S]* @a, i32 0, i32 0, i32 1, i32 1), align 4, !tbaa !7
    %cmp4 = icmp eq i32 %2, 3
    %. = select i1 %cmp4, i32 0, i32 3
    br label %return
  
  return:                                           ; preds = %if.end3, %if.end, %entry
    %retval.0 = phi i32 [ 1, %entry ], [ 2, %if.end ], [ %., %if.end3 ]
    ret i32 %retval.0
  }
  
  attributes #0 = { norecurse nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 9.0.0 (http://llvm.org/git/clang.git 4e215e73ed6b499f3ccf23263c96cd188e0eda2c) (git@github.com:unison-code/llvm.git 9914ec00db7eeaf764045b9071638c2421cd32e7)"}
  !2 = !{!3, !4, i64 0}
  !3 = !{!"", !4, i64 0, !5, i64 4}
  !4 = !{!"int", !5, i64 0}
  !5 = !{!"omnipotent char", !6, i64 0}
  !6 = !{!"Simple C/C++ TBAA"}
  !7 = !{!4, !4, i64 0}

...
---
name:            main
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 0
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 16):
    successors: %bb.1(50), %bb.3(50)
  
    ANNOTATION_LABEL <0x7fa80e0> = !{!"unison-block-frequency", i64 16}
    renamable $r1 = A2_tfrsi @a
    renamable $r0 = L2_loadri_io renamable $r1, 0, <0x7fa9a20> = !{!"unison-memory-partition", i64 0} :: (dereferenceable load 4 from `i32* getelementptr inbounds ([1 x %struct.S], [1 x %struct.S]* @a, i32 0, i32 0, i32 0)`, align 8, !tbaa !2)
    BUNDLE implicit-def dead $p0, implicit-def $r0, implicit-def $pc, implicit killed $r0 {
      renamable $p0 = C2_cmpeqi killed renamable $r0, 1
      renamable $r0 = A2_tfrsi 1
      J2_jumpfnewpt internal killed $p0, %bb.3, implicit-def $pc
    }
  
  bb.1.if.end (freq 8):
    successors: %bb.2(100)
    liveins: $r1:0x00000001
    liveouts: $p0, $r0, $pc, $r0, $r31
  
    ANNOTATION_LABEL <0x7fa9b20> = !{!"unison-block-frequency", i64 8}
    renamable $r0 = L2_loadri_io renamable $r1, 4, <0x7fa9a20> = !{!"unison-memory-partition", i64 0} :: (dereferenceable load 4 from `i32* getelementptr inbounds ([1 x %struct.S], [1 x %struct.S]* @a, i32 0, i32 0, i32 1, i32 0)`, !tbaa !7)
    BUNDLE implicit-def dead $p0, implicit-def $r0, implicit-def $pc, implicit killed $r0, implicit killed $r31 {
      renamable $p0 = C2_cmpeqi killed renamable $r0, 2
      renamable $r0 = A2_tfrsi 2
      PS_jmpretfnew internal killed $p0, killed $r31, implicit-def $pc, implicit-def $pc, implicit internal $r0
    }
  
  bb.2.if.end3 (freq 8):
    successors: %bb.3(100)
    liveins: $r0:0x00000001, $r1:0x00000001
  
    ANNOTATION_LABEL <0x7fa9b20> = !{!"unison-block-frequency", i64 8}
    renamable $r1 = L2_loadri_io renamable $r1, 8, <0x7fa9a20> = !{!"unison-memory-partition", i64 0} :: (dereferenceable load 4 from `i32* getelementptr inbounds ([1 x %struct.S], [1 x %struct.S]* @a, i32 0, i32 0, i32 1, i32 1)`, align 8, !tbaa !7)
    renamable $p0 = C2_cmpeqi killed renamable $r1, 3
    $r0 = C2_muxii killed $p0, 0, 3
  
  bb.3.return (freq 16):
    liveins: $r0:0x00000001
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x7fa80e0> = !{!"unison-block-frequency", i64 16}
    PS_jmpret killed $r31, implicit-def dead $pc, implicit killed $r0

...
