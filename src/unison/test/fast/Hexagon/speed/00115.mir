--- |
  ; ModuleID = '00115.ll'
  source_filename = "./tests/single-exec/00115.c"
  target datalayout = "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048"
  target triple = "hexagon"
  
  @s = dso_local local_unnamed_addr global [4 x i8] c"abc\00", align 1
  
  ; Function Attrs: norecurse nounwind readonly
  define dso_local i32 @main() local_unnamed_addr #0 {
  entry:
    %0 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s, i32 0, i32 0), align 1, !tbaa !2
    %cmp = icmp eq i8 %0, 97
    br i1 %cmp, label %if.end, label %return
  
  if.end:                                           ; preds = %entry
    %1 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s, i32 0, i32 1), align 1, !tbaa !2
    %cmp3 = icmp eq i8 %1, 98
    br i1 %cmp3, label %if.end6, label %return
  
  if.end6:                                          ; preds = %if.end
    %2 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s, i32 0, i32 2), align 1, !tbaa !2
    %cmp8 = icmp eq i8 %2, 99
    br i1 %cmp8, label %if.end11, label %return
  
  if.end11:                                         ; preds = %if.end6
    %3 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s, i32 0, i32 3), align 1, !tbaa !2
    %cmp13 = icmp eq i8 %3, 0
    %. = select i1 %cmp13, i32 0, i32 4
    br label %return
  
  return:                                           ; preds = %if.end11, %if.end6, %if.end, %entry
    %retval.0 = phi i32 [ 1, %entry ], [ 2, %if.end ], [ 3, %if.end6 ], [ %., %if.end11 ]
    ret i32 %retval.0
  }
  
  attributes #0 = { norecurse nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 9.0.0 (http://llvm.org/git/clang.git 4e215e73ed6b499f3ccf23263c96cd188e0eda2c) (git@github.com:unison-code/llvm.git 9914ec00db7eeaf764045b9071638c2421cd32e7)"}
  !2 = !{!3, !3, i64 0}
  !3 = !{!"omnipotent char", !4, i64 0}
  !4 = !{!"Simple C/C++ TBAA"}

...
---
name:            main
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
  - { id: 1, class: intregs, preferred-register: '' }
  - { id: 2, class: intregs, preferred-register: '' }
  - { id: 3, class: intregs, preferred-register: '' }
  - { id: 4, class: predregs, preferred-register: '' }
  - { id: 5, class: predregs, preferred-register: '' }
  - { id: 6, class: intregs, preferred-register: '' }
  - { id: 7, class: intregs, preferred-register: '' }
  - { id: 8, class: predregs, preferred-register: '' }
  - { id: 9, class: predregs, preferred-register: '' }
  - { id: 10, class: intregs, preferred-register: '' }
  - { id: 11, class: intregs, preferred-register: '' }
  - { id: 12, class: predregs, preferred-register: '' }
  - { id: 13, class: predregs, preferred-register: '' }
  - { id: 14, class: intregs, preferred-register: '' }
  - { id: 15, class: predregs, preferred-register: '' }
  - { id: 16, class: intregs, preferred-register: '' }
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 64):
    successors: %bb.1(50), %bb.4(50)
  
    ANNOTATION_LABEL <0x84446e0> = !{!"unison-block-frequency", i64 64}
    %16:intregs = A2_tfrsi @s
    %3:intregs = L2_loadrb_io %16, 0, <0x844e190> = !{!"unison-memory-partition", i64 0} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s, i32 0, i32 0)`, !tbaa !2)
    %4:predregs = C2_cmpeqi killed %3, 97
    %2:intregs = A2_tfrsi 1
    J2_jumpf killed %4, %bb.4, implicit-def dead $pc
    J2_jump %bb.1, implicit-def dead $pc
  
  bb.1.if.end (freq 32):
    successors: %bb.2(50), %bb.4(50)
  
    ANNOTATION_LABEL <0x844e870> = !{!"unison-block-frequency", i64 32}
    %7:intregs = L2_loadrb_io %16, 1, <0x844e190> = !{!"unison-memory-partition", i64 0} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s, i32 0, i32 1)`, !tbaa !2)
    %8:predregs = C2_cmpeqi killed %7, 98
    %6:intregs = A2_tfrsi 2
    J2_jumpf killed %8, %bb.4, implicit-def dead $pc
    J2_jump %bb.2, implicit-def dead $pc
  
  bb.2.if.end6 (freq 16):
    successors: %bb.3(50), %bb.4(50)
  
    ANNOTATION_LABEL <0x844e9b0> = !{!"unison-block-frequency", i64 16}
    %11:intregs = L2_loadrb_io %16, 2, <0x844e190> = !{!"unison-memory-partition", i64 0} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s, i32 0, i32 2)`, !tbaa !2)
    %12:predregs = C2_cmpeqi killed %11, 99
    %10:intregs = A2_tfrsi 3
    J2_jumpf killed %12, %bb.4, implicit-def dead $pc
    J2_jump %bb.3, implicit-def dead $pc
  
  bb.3.if.end11 (freq 8):
    successors: %bb.4(100)
  
    ANNOTATION_LABEL <0x844eaf0> = !{!"unison-block-frequency", i64 8}
    %14:intregs = L2_loadrb_io killed %16, 3, <0x844e190> = !{!"unison-memory-partition", i64 0} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s, i32 0, i32 3)`, !tbaa !2)
    %15:predregs = C2_cmpeqi killed %14, 0
    %0:intregs = C2_muxii killed %15, 0, 4
  
  bb.4.return (freq 64):
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x84446e0> = !{!"unison-block-frequency", i64 64}
    %1:intregs = PHI %2, %bb.0, %6, %bb.1, %10, %bb.2, %0, %bb.3
    $r0 = COPY killed %1
    PS_jmpret $r31, implicit-def dead $pc, implicit killed $r0

...
