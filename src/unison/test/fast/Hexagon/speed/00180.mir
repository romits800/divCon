--- |
  ; ModuleID = '00180.ll'
  source_filename = "./tests/single-exec/00180.c"
  target datalayout = "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048"
  target triple = "hexagon"
  
  @.str = private unnamed_addr constant [7 x i8] c"abcdef\00", align 1
  
  ; Function Attrs: nounwind
  define dso_local i32 @main() local_unnamed_addr #0 {
  entry:
    %a = alloca [10 x i8], align 8
    %cgep3 = bitcast [10 x i8]* %a to [10 x i8]*
    %cgep14 = bitcast [10 x i8]* %cgep3 to i8*
    call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %cgep14) #3
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 8 %cgep14, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32 7, i1 false)
    %cgep2 = getelementptr inbounds [10 x i8], [10 x i8]* %cgep3, i32 0, i32 1
    %puts = call i32 @puts(i8* nonnull %cgep2)
    call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %cgep14) #3
    ret i32 0
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i1) #1
  
  ; Function Attrs: nounwind
  declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #2
  
  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) #3
  
  attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { argmemonly nounwind "target-cpu"="hexagonv5" }
  attributes #2 = { nounwind "target-cpu"="hexagonv5" }
  attributes #3 = { nounwind }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 9.0.0 (http://llvm.org/git/clang.git 4e215e73ed6b499f3ccf23263c96cd188e0eda2c) (git@github.com:unison-code/llvm.git 9914ec00db7eeaf764045b9071638c2421cd32e7)"}

...
---
name:            main
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
  - { id: 1, class: intregs, preferred-register: '' }
  - { id: 2, class: intregs, preferred-register: '' }
  - { id: 3, class: intregs, preferred-register: '' }
  - { id: 4, class: intregs, preferred-register: '' }
  - { id: 5, class: intregs, preferred-register: '' }
  - { id: 6, class: intregs, preferred-register: '' }
  - { id: 7, class: intregs, preferred-register: '' }
  - { id: 8, class: intregs, preferred-register: '' }
  - { id: 9, class: intregs, preferred-register: '' }
  - { id: 10, class: intregs, preferred-register: '' }
  - { id: 11, class: intregs, preferred-register: '' }
  - { id: 12, class: intregs, preferred-register: '' }
  - { id: 13, class: intregs, preferred-register: '' }
  - { id: 14, class: intregs, preferred-register: '' }
  - { id: 15, class: intregs, preferred-register: '' }
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    8
  adjustsStack:    false
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           
  - { id: 0, name: a, type: default, offset: 0, size: 10, alignment: 8, 
      stack-id: 0, callee-saved-register: '', callee-saved-restored: true, 
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
constants:       []
body:             |
  bb.0.entry (freq 8):
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x8185500> = !{!"unison-block-frequency", i64 8}
    %15:intregs = A2_tfrsi @.str
    %0:intregs = L2_loadrub_io %15, 6, <0x818b200> = !{!"unison-memory-partition", i64 2} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0)` + 6)
    S2_storerb_io %stack.0.a, 6, killed %0, <0x818b300> = !{!"unison-memory-partition", i64 1} :: (store 1 into %ir.cgep14 + 6, align 4)
    %1:intregs = L2_loadrub_io %15, 5, <0x818b400> = !{!"unison-memory-partition", i64 3} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0)` + 5)
    %2:intregs = L2_loadrub_io %15, 4, <0x818b500> = !{!"unison-memory-partition", i64 5} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0)` + 4)
    %3:intregs = S2_asl_i_r_or killed %2, killed %1, 8
    S2_storerh_io %stack.0.a, 4, killed %3, <0x818b600> = !{!"unison-memory-partition", i64 4} :: (store 2 into %ir.cgep14 + 4, align 4)
    %4:intregs = L2_loadrub_io %15, 3, <0x818b700> = !{!"unison-memory-partition", i64 6} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0)` + 3)
    %5:intregs = L2_loadrub_io %15, 2, <0x818b800> = !{!"unison-memory-partition", i64 7} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0)` + 2)
    %6:intregs = S2_asl_i_r_or killed %5, killed %4, 8
    %7:intregs = L2_loadrub_io %15, 1, <0x818b830> = !{!"unison-memory-partition", i64 8} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0)` + 1)
    %8:intregs = L2_loadrub_io killed %15, 0, <0x818b930> = !{!"unison-memory-partition", i64 0} :: (dereferenceable load 1 from `i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0)`)
    %9:intregs = S2_asl_i_r_or killed %8, killed %7, 8
    %10:intregs = S2_asl_i_r_or killed %9, killed %6, 16
    S2_storeri_io %stack.0.a, 0, killed %10, <0x818ba30> = !{!"unison-memory-partition", i64 9} :: (store 4 into %ir.cgep14, align 8)
    %11:intregs = PS_fi %stack.0.a, 0
    %12:intregs = S2_setbit_i killed %11, 0
    ADJCALLSTACKDOWN 0, 0, implicit-def $r29, implicit-def dead $r30, implicit $r31, implicit $r30, implicit $r29
    $r0 = COPY killed %12
    J2_call @puts, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    ADJCALLSTACKUP 0, 0, implicit-def dead $r29, implicit-def dead $r30, implicit-def dead $r31, implicit $r29
    %14:intregs = A2_tfrsi 0
    $r0 = COPY killed %14
    PS_jmpret $r31, implicit-def dead $pc, implicit killed $r0

...
