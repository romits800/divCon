--- |
  ; ModuleID = '00193.ll'
  source_filename = "./tests/single-exec/00193.c"
  target datalayout = "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048"
  target triple = "hexagon"
  
  @str = private unnamed_addr constant [2 x i8] c"3\00", align 1
  @str.4 = private unnamed_addr constant [2 x i8] c"2\00", align 1
  @str.5 = private unnamed_addr constant [4 x i8] c"out\00", align 1
  @str.6 = private unnamed_addr constant [2 x i8] c"1\00", align 1
  
  ; Function Attrs: nounwind
  define dso_local void @fred(i32 %x) local_unnamed_addr #0 {
  entry:
    switch i32 %x, label %sw.epilog [
      i32 1, label %sw.bb
      i32 2, label %sw.bb1
      i32 3, label %sw.bb3
    ]
  
  sw.bb:                                            ; preds = %entry
    %puts8 = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i32 0, i32 0))
    ret void
  
  sw.bb1:                                           ; preds = %entry
    %puts6 = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i32 0, i32 0))
    br label %sw.epilog
  
  sw.bb3:                                           ; preds = %entry
    %puts = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str, i32 0, i32 0))
    ret void
  
  sw.epilog:                                        ; preds = %sw.bb1, %entry
    %puts7 = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.5, i32 0, i32 0))
    ret void
  }
  
  ; Function Attrs: nounwind
  define dso_local i32 @main() local_unnamed_addr #0 {
  entry:
    %puts8.i = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i32 0, i32 0)) #2
    %puts6.i = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i32 0, i32 0)) #2
    %puts7.i = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.5, i32 0, i32 0)) #2
    %puts.i = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str, i32 0, i32 0)) #2
    ret i32 0
  }
  
  ; Function Attrs: nounwind
  declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #1
  
  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) #2
  
  attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind "target-cpu"="hexagonv5" }
  attributes #2 = { nounwind }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 9.0.0 (http://llvm.org/git/clang.git 4e215e73ed6b499f3ccf23263c96cd188e0eda2c) (git@github.com:unison-code/llvm.git 9914ec00db7eeaf764045b9071638c2421cd32e7)"}

...
---
name:            fred
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
  - { id: 1, class: predregs, preferred-register: '' }
  - { id: 2, class: predregs, preferred-register: '' }
  - { id: 3, class: predregs, preferred-register: '' }
  - { id: 4, class: predregs, preferred-register: '' }
  - { id: 5, class: intregs, preferred-register: '' }
  - { id: 6, class: intregs, preferred-register: '' }
  - { id: 7, class: intregs, preferred-register: '' }
  - { id: 8, class: intregs, preferred-register: '' }
  - { id: 9, class: intregs, preferred-register: '' }
liveins:         
  - { reg: '$r0', virtual-reg: '%0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 32):
    successors: %bb.5(25), %bb.1(75)
    liveins: $r0
  
    ANNOTATION_LABEL <0x899a4c0> = !{!"unison-block-frequency", i64 32}
    %0:intregs = COPY killed $r0
    %1:predregs = C2_cmpeqi %0, 3
    J2_jumpt killed %1, %bb.5, implicit-def dead $pc
    J2_jump %bb.1, implicit-def dead $pc
  
  bb.1.entry (freq 24):
    successors: %bb.4(33), %bb.2(66)
  
    ANNOTATION_LABEL <0x8999ef0> = !{!"unison-block-frequency", i64 24}
    %2:predregs = C2_cmpeqi %0, 2
    J2_jumpt killed %2, %bb.4, implicit-def dead $pc
    J2_jump %bb.2, implicit-def dead $pc
  
  bb.2.entry (freq 16):
    successors: %bb.3(50), %bb.6(50)
  
    ANNOTATION_LABEL <0x899c060> = !{!"unison-block-frequency", i64 16}
    %3:predregs = C2_cmpeqi killed %0, 1
    J2_jumpf killed %3, %bb.6, implicit-def dead $pc
    J2_jump %bb.3, implicit-def dead $pc
  
  bb.3.sw.bb (freq 8):
    liveouts: $r0
  
    ANNOTATION_LABEL <0x899c160> = !{!"unison-block-frequency", i64 8}
    %8:intregs = A2_tfrsi @str.6
    $r0 = COPY killed %8
    PS_tailcall_i @puts, hexagoncsr, implicit killed $r0
  
  bb.4.sw.bb1 (freq 8):
    successors: %bb.6(100)
  
    ANNOTATION_LABEL <0x899c160> = !{!"unison-block-frequency", i64 8}
    %6:intregs = A2_tfrsi @str.4
    ADJCALLSTACKDOWN 0, 0, implicit-def $r29, implicit-def dead $r30, implicit $r31, implicit $r30, implicit $r29
    $r0 = COPY killed %6
    J2_call @puts, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    ADJCALLSTACKUP 0, 0, implicit-def dead $r29, implicit-def dead $r30, implicit-def dead $r31, implicit $r29
    J2_jump %bb.6, implicit-def dead $pc
  
  bb.5.sw.bb3 (freq 8):
    liveouts: $r0
  
    ANNOTATION_LABEL <0x899c160> = !{!"unison-block-frequency", i64 8}
    %5:intregs = A2_tfrsi @str
    $r0 = COPY killed %5
    PS_tailcall_i @puts, hexagoncsr, implicit killed $r0
  
  bb.6.sw.epilog (freq 16):
    liveouts: $r0
  
    ANNOTATION_LABEL <0x899c060> = !{!"unison-block-frequency", i64 16}
    %9:intregs = A2_tfrsi @str.5
    $r0 = COPY killed %9
    PS_tailcall_i @puts, hexagoncsr, implicit killed $r0

...
---
name:            main
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
  - { id: 1, class: intregs, preferred-register: '' }
  - { id: 2, class: intregs, preferred-register: '' }
  - { id: 3, class: intregs, preferred-register: '' }
  - { id: 4, class: intregs, preferred-register: '' }
  - { id: 5, class: intregs, preferred-register: '' }
  - { id: 6, class: intregs, preferred-register: '' }
  - { id: 7, class: intregs, preferred-register: '' }
  - { id: 8, class: intregs, preferred-register: '' }
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 8):
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x899c160> = !{!"unison-block-frequency", i64 8}
    %0:intregs = A2_tfrsi @str.6
    ADJCALLSTACKDOWN 0, 0, implicit-def $r29, implicit-def dead $r30, implicit $r31, implicit $r30, implicit $r29
    $r0 = COPY killed %0
    J2_call @puts, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    ADJCALLSTACKUP 0, 0, implicit-def dead $r29, implicit-def dead $r30, implicit-def dead $r31, implicit $r29
    %2:intregs = A2_tfrsi @str.4
    ADJCALLSTACKDOWN 0, 0, implicit-def $r29, implicit-def dead $r30, implicit $r31, implicit $r30, implicit $r29
    $r0 = COPY killed %2
    J2_call @puts, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    ADJCALLSTACKUP 0, 0, implicit-def dead $r29, implicit-def dead $r30, implicit-def dead $r31, implicit $r29
    %4:intregs = A2_tfrsi @str.5
    ADJCALLSTACKDOWN 0, 0, implicit-def $r29, implicit-def dead $r30, implicit $r31, implicit $r30, implicit $r29
    $r0 = COPY killed %4
    J2_call @puts, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    ADJCALLSTACKUP 0, 0, implicit-def dead $r29, implicit-def dead $r30, implicit-def dead $r31, implicit $r29
    %6:intregs = A2_tfrsi @str
    ADJCALLSTACKDOWN 0, 0, implicit-def $r29, implicit-def dead $r30, implicit $r31, implicit $r30, implicit $r29
    $r0 = COPY killed %6
    J2_call @puts, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    ADJCALLSTACKUP 0, 0, implicit-def dead $r29, implicit-def dead $r30, implicit-def dead $r31, implicit $r29
    %8:intregs = A2_tfrsi 0
    $r0 = COPY killed %8
    PS_jmpret $r31, implicit-def dead $pc, implicit killed $r0

...
