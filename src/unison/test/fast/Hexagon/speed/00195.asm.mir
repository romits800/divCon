--- |
  ; ModuleID = '00195.ll'
  source_filename = "./tests/single-exec/00195.c"
  target datalayout = "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048"
  target triple = "hexagon"
  
  %struct.point = type { double, double }
  
  @point_array = common dso_local local_unnamed_addr global [100 x %struct.point] zeroinitializer, align 8
  @.str = private unnamed_addr constant [8 x i8] c"%f, %f\0A\00", align 1
  
  ; Function Attrs: nounwind
  define dso_local i32 @main() local_unnamed_addr #0 {
  entry:
    store double 1.234000e+01, double* getelementptr inbounds ([100 x %struct.point], [100 x %struct.point]* @point_array, i32 0, i32 10, i32 0), align 8, !tbaa !2
    store double 5.678000e+01, double* getelementptr inbounds ([100 x %struct.point], [100 x %struct.point]* @point_array, i32 0, i32 10, i32 1), align 8, !tbaa !7
    %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), double 1.234000e+01, double 5.678000e+01)
    ret i32 0
  }
  
  ; Function Attrs: nounwind
  declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #1
  
  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) #2
  
  attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 9.0.0 (http://llvm.org/git/clang.git 4e215e73ed6b499f3ccf23263c96cd188e0eda2c) (git@github.com:unison-code/llvm.git 9914ec00db7eeaf764045b9071638c2421cd32e7)"}
  !2 = !{!3, !4, i64 0}
  !3 = !{!"point", !4, i64 0, !4, i64 8}
  !4 = !{!"double", !5, i64 0}
  !5 = !{!"omnipotent char", !6, i64 0}
  !6 = !{!"Simple C/C++ TBAA"}
  !7 = !{!3, !4, i64 8}

...
---
name:            main
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       16
  offsetAdjustment: 0
  maxAlignment:    8
  adjustsStack:    true
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 16
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 8):
    liveouts: $r0, $d15, $r30, $r31, $pc, $r29, $r30, $framekey
  
    ANNOTATION_LABEL <0x8caa660> = !{!"unison-block-frequency", i64 8}
    BUNDLE implicit-def $d1, implicit-def $r2, implicit-def $r3, implicit-def $r29, implicit-def $r30, implicit-def $r0, implicit $r29, implicit killed $framekey, implicit killed $framelimit, implicit killed $r30, implicit killed $r31 {
      renamable $d1 = CONST64 4623136420479977390
      $r29 = S2_allocframe $r29, 16, implicit-def $r30, implicit killed $framekey, implicit killed $framelimit, implicit killed $r30, implicit killed $r31 :: (store 4 into stack)
      $r0 = A2_tfrsi @.str
    }
    BUNDLE implicit-def $d2, implicit-def $r4, implicit-def $r5, implicit $r29, implicit $d1 {
      renamable $d2 = CONST64 4633187891898314916
      S2_storerd_io $r29, 0, renamable $d1 :: (store 8 into stack)
    }
    BUNDLE implicit $r29, implicit $d2, implicit killed $d1 {
      S2_storerd_io $r29, 8, renamable $d2 :: (store 8 into stack + 8)
      PS_storerdabs @point_array + 160, killed renamable $d1 :: (store 8 into `double* getelementptr inbounds ([100 x %struct.point], [100 x %struct.point]* @point_array, i32 0, i32 10, i32 0)`, !tbaa !2)
    }
    BUNDLE implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit-def dead $r0, implicit killed $d2, implicit killed $r29, implicit killed $r0 {
      PS_storerdabs @point_array + 168, killed renamable $d2 :: (store 8 into `double* getelementptr inbounds ([100 x %struct.point], [100 x %struct.point]* @point_array, i32 0, i32 10, i32 1)`, !tbaa !7)
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit killed $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    BUNDLE implicit-def dead $r0, implicit-def $d15, implicit-def $r30, implicit-def $r31, implicit-def $pc, implicit-def $r29, implicit killed $r30, implicit killed $framekey {
      $r0 = A2_tfrsi 0
      $d15 = L4_return killed $r30, implicit-def $pc, implicit-def $r29, implicit killed $framekey, implicit-def dead $pc, implicit internal killed $r0
    }

...
