--- |
  ; ModuleID = '00197.ll'
  source_filename = "./tests/single-exec/00197.c"
  target datalayout = "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048"
  target triple = "hexagon"
  
  @henry.fred = internal unnamed_addr global i32 4567, align 4
  @.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
  @fred = internal unnamed_addr global i1 false, align 4
  @joe = internal unnamed_addr global i1 false, align 4
  
  ; Function Attrs: nounwind
  define dso_local void @henry() local_unnamed_addr #0 {
  entry:
    %0 = load i32, i32* @henry.fred, align 4, !tbaa !2
    %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %0)
    %1 = load i32, i32* @henry.fred, align 4, !tbaa !2
    %inc = add nsw i32 %1, 1
    store i32 %inc, i32* @henry.fred, align 4, !tbaa !2
    ret void
  }
  
  ; Function Attrs: nounwind
  declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #1
  
  ; Function Attrs: nounwind
  define dso_local i32 @main() local_unnamed_addr #0 {
  entry:
    %.b5 = load i1, i1* @fred, align 4
    %0 = select i1 %.b5, i32 8901, i32 1234
    %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %0)
    %1 = load i32, i32* @henry.fred, align 4, !tbaa !2
    %call.i = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %1) #2
    %2 = load i32, i32* @henry.fred, align 4, !tbaa !2
    %inc.i = add nsw i32 %2, 1
    store i32 %inc.i, i32* @henry.fred, align 4, !tbaa !2
    %call.i7 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %inc.i) #2
    %3 = load i32, i32* @henry.fred, align 4, !tbaa !2
    %inc.i8 = add nsw i32 %3, 1
    store i32 %inc.i8, i32* @henry.fred, align 4, !tbaa !2
    %call.i9 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %inc.i8) #2
    %4 = load i32, i32* @henry.fred, align 4, !tbaa !2
    %inc.i10 = add nsw i32 %4, 1
    store i32 %inc.i10, i32* @henry.fred, align 4, !tbaa !2
    %call.i11 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %inc.i10) #2
    %5 = load i32, i32* @henry.fred, align 4, !tbaa !2
    %inc.i12 = add nsw i32 %5, 1
    store i32 %inc.i12, i32* @henry.fred, align 4, !tbaa !2
    %.b4 = load i1, i1* @fred, align 4
    %6 = select i1 %.b4, i32 8901, i32 1234
    %call1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %6)
    store i1 true, i1* @fred, align 4
    store i1 true, i1* @joe, align 4
    %call2 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 8901)
    %.b6 = load i1, i1* @joe, align 4
    %7 = select i1 %.b6, i32 2345, i32 0
    %call3 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %7)
    ret i32 0
  }
  
  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) #2
  
  attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 9.0.0 (http://llvm.org/git/clang.git 4e215e73ed6b499f3ccf23263c96cd188e0eda2c) (git@github.com:unison-code/llvm.git 9914ec00db7eeaf764045b9071638c2421cd32e7)"}
  !2 = !{!3, !3, i64 0}
  !3 = !{!"int", !4, i64 0}
  !4 = !{!"omnipotent char", !5, i64 0}
  !5 = !{!"Simple C/C++ TBAA"}

...
---
name:            henry
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       16
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    true
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 8
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      
  - { id: 0, type: spill-slot, offset: -8, size: 8, alignment: 8, stack-id: 0, 
      callee-saved-register: '$d8', callee-saved-restored: true, debug-info-variable: '', 
      debug-info-expression: '', debug-info-location: '' }
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 8):
    liveins: $d8, $d8
    liveouts: $pc, $r29, $framekey, $pc, $d8
  
    ANNOTATION_LABEL <0x8cb0ae0> = !{!"unison-block-frequency", i64 8}
    BUNDLE implicit-def $r29, implicit-def $r30, implicit-def $r0, implicit $r29, implicit killed $framekey, implicit killed $framelimit, implicit killed $r30, implicit killed $r31 {
      $r29 = S2_allocframe $r29, 16, implicit-def $r30, implicit killed $framekey, implicit killed $framelimit, implicit killed $r30, implicit killed $r31 :: (store 4 into stack)
      renamable $r0 = PS_loadriabs @henry.fred :: (dereferenceable load 4 from @henry.fred, !tbaa !2)
    }
    BUNDLE implicit-def $r0, implicit $r29, implicit killed $r0, implicit killed $d8 {
      S2_storeri_io $r29, 0, killed renamable $r0 :: (store 4 into stack)
      $r0 = A2_tfrsi @.str
      S2_storerd_io $r29, 8, killed $d8 :: (store 8 into %fixed-stack.0)
    }
    BUNDLE implicit-def $r16, implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit-def dead $r0, implicit $r29, implicit killed $r0 {
      renamable $r16 = A2_tfrsi @henry.fred
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    BUNDLE implicit-def $d8, implicit-def $r16, implicit-def $r17, implicit killed $r16, implicit killed $r29 {
      L4_iadd_memopw_io killed renamable $r16, 0, 1 :: (store 4 into @henry.fred, !tbaa !2), (dereferenceable load 4 from @henry.fred, !tbaa !2)
      $d8 = L2_loadrd_io killed $r29, 8 :: (load 8 from %fixed-stack.0)
    }
    $d15 = L4_return killed $r30, <0x8cbe320> = !{!"unison-memory-partition", i64 0}, implicit-def $pc, implicit-def $r29, implicit killed $framekey, implicit-def dead $pc, implicit $d8

...
---
name:            main
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       24
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    true
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 8
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      
  - { id: 0, type: spill-slot, offset: -16, size: 8, alignment: 8, stack-id: 0, 
      callee-saved-register: '$d9', callee-saved-restored: true, debug-info-variable: '', 
      debug-info-expression: '', debug-info-location: '' }
  - { id: 1, type: spill-slot, offset: -8, size: 8, alignment: 8, stack-id: 0, 
      callee-saved-register: '$d8', callee-saved-restored: true, debug-info-variable: '', 
      debug-info-expression: '', debug-info-location: '' }
stack:           []
constants:       []
body:             |
  bb.0.entry (freq 8):
    liveins: $d8, $d9, $d8, $d9
    liveouts: $pc, $r29, $framekey, $pc, $r0, $d8, $d9
  
    ANNOTATION_LABEL <0x8cb0ae0> = !{!"unison-block-frequency", i64 8}
    BUNDLE implicit-def $r29, implicit-def $r30, implicit-def $r16, implicit $r29, implicit killed $framekey, implicit killed $framelimit, implicit killed $r30, implicit killed $r31, implicit killed $d8 {
      $r29 = S2_allocframe $r29, 24, implicit-def $r30, implicit killed $framekey, implicit killed $framelimit, implicit killed $r30, implicit killed $r31 :: (store 4 into stack)
      S2_storerd_io internal $r29, -16, killed $d8 :: (store 8 into %fixed-stack.1)
      renamable $r16 = A2_tfrsi @fred
    }
    BUNDLE implicit-def $r17, implicit-def $r0, implicit-def $r18, implicit $r16, implicit $r29, implicit killed $d9 {
      renamable $r17 = A2_tfrsi 8901
      renamable $r0 = L2_loadrub_io renamable $r16, 0 :: (dereferenceable load 1 from @fred, align 4)
      S2_storerd_io $r29, 8, killed $d9 :: (store 8 into %fixed-stack.0)
      renamable $r18 = A2_tfrsi 1234
    }
    renamable $p0 = C2_cmpgtui killed renamable $r0, 0
    BUNDLE implicit-def dead $r0, implicit killed $p0, implicit $r17, implicit $r18, implicit $r29 {
      $r0 = C2_mux killed $p0, renamable $r17, renamable $r18
      S2_storerinew_io $r29, 0, internal killed renamable $r0 :: (store 4 into stack)
    }
    BUNDLE implicit-def $r0, implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit $r29 {
      $r0 = A2_tfrsi @.str
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit internal killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    renamable $r19 = A2_tfrsi @henry.fred
    BUNDLE implicit-def dead $r0, implicit $r19, implicit $r29 {
      renamable $r0 = L2_loadri_io renamable $r19, 0 :: (dereferenceable load 4 from @henry.fred, !tbaa !2)
      S2_storerinew_io $r29, 0, internal killed renamable $r0 :: (store 4 into stack)
    }
    BUNDLE implicit-def $r0, implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit $r29 {
      $r0 = A2_tfrsi @.str
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit internal killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    renamable $r0 = L2_loadri_io renamable $r19, 0, <0x8cbe320> = !{!"unison-memory-partition", i64 0} :: (dereferenceable load 4 from @henry.fred, !tbaa !2)
    BUNDLE implicit-def $r1, implicit-def $r0, implicit killed $r0, implicit $r29 {
      renamable $r1 = nsw A2_addi killed renamable $r0, 1
      $r0 = A2_tfrsi @.str
      S2_storerinew_io $r29, 0, internal renamable $r1 :: (store 4 into stack)
    }
    BUNDLE implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit-def dead $r0, implicit $r19, implicit killed $r1, implicit $r29, implicit killed $r0 {
      S2_storeri_io renamable $r19, 0, killed renamable $r1 :: (store 4 into @henry.fred, !tbaa !2)
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    renamable $r0 = L2_loadri_io renamable $r19, 0, <0x8ca2100> = !{!"unison-memory-partition", i64 1} :: (dereferenceable load 4 from @henry.fred, !tbaa !2)
    BUNDLE implicit-def $r1, implicit-def $r0, implicit killed $r0, implicit $r29 {
      renamable $r1 = nsw A2_addi killed renamable $r0, 1
      $r0 = A2_tfrsi @.str
      S2_storerinew_io $r29, 0, internal renamable $r1 :: (store 4 into stack)
    }
    BUNDLE implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit-def dead $r0, implicit $r19, implicit killed $r1, implicit $r29, implicit killed $r0 {
      S2_storeri_io renamable $r19, 0, killed renamable $r1 :: (store 4 into @henry.fred, !tbaa !2)
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    renamable $r0 = L2_loadri_io renamable $r19, 0, <0x8caba10> = !{!"unison-memory-partition", i64 2} :: (dereferenceable load 4 from @henry.fred, !tbaa !2)
    BUNDLE implicit-def $r1, implicit-def $r0, implicit killed $r0, implicit $r29 {
      renamable $r1 = nsw A2_addi killed renamable $r0, 1
      $r0 = A2_tfrsi @.str
      S2_storerinew_io $r29, 0, internal renamable $r1 :: (store 4 into stack)
    }
    BUNDLE implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit-def dead $r0, implicit $r19, implicit killed $r1, implicit $r29, implicit killed $r0 {
      S2_storeri_io renamable $r19, 0, killed renamable $r1 :: (store 4 into @henry.fred, !tbaa !2)
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    BUNDLE implicit-def $r0, implicit $r16, implicit killed $r19 {
      renamable $r0 = L2_loadrub_io renamable $r16, 0 :: (dereferenceable load 1 from @fred, align 4)
      L4_iadd_memopw_io killed renamable $r19, 0, 1 :: (store 4 into @henry.fred, !tbaa !2), (dereferenceable load 4 from @henry.fred, !tbaa !2)
    }
    renamable $p0 = C2_cmpgtui killed renamable $r0, 0
    BUNDLE implicit-def dead $r0, implicit killed $p0, implicit $r17, implicit killed $r18, implicit $r29 {
      $r0 = C2_mux killed $p0, renamable $r17, killed renamable $r18
      S2_storerinew_io $r29, 0, internal killed renamable $r0 :: (store 4 into stack)
    }
    BUNDLE implicit-def $r0, implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit $r29 {
      $r0 = A2_tfrsi @.str
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit internal killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    BUNDLE implicit-def $r1, implicit-def $r0, implicit $r29, implicit killed $r17 {
      renamable $r1 = A2_tfrsi 1
      $r0 = A2_tfrsi @.str
      S2_storeri_io $r29, 0, killed renamable $r17 :: (store 4 into stack)
    }
    BUNDLE implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit-def dead $r0, implicit killed $r16, implicit killed $r1, implicit $r29, implicit killed $r0 {
      S2_storerb_io killed renamable $r16, 0, renamable $r1 :: (store 1 into @fred, align 4)
      PS_storerbabs @joe, killed renamable $r1 :: (store 1 into @joe, align 4)
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    renamable $r0 = PS_loadrubabs @joe, <0x8ca5a00> = !{!"unison-memory-partition", i64 4} :: (dereferenceable load 1 from @joe, align 4)
    renamable $p0 = C2_cmpgtui killed renamable $r0, 0
    BUNDLE implicit-def dead $r0, implicit killed $p0, implicit $r29 {
      $r0 = C2_muxii killed $p0, 2345, 0
      S2_storerinew_io $r29, 0, internal killed renamable $r0 :: (store 4 into stack)
    }
    BUNDLE implicit-def $r0, implicit-def dead $pc, implicit-def dead $r31, implicit-def $r29, implicit $r29 {
      $r0 = A2_tfrsi @.str
      J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit internal killed $r0, implicit-def $r29, implicit-def dead $r0
    }
    BUNDLE implicit-def $r0, implicit-def $d8, implicit-def $r16, implicit-def $r17, implicit-def $d9, implicit-def $r18, implicit-def $r19, implicit killed $r29 {
      $r0 = A2_tfrsi 0
      $d8 = L2_loadrd_io $r29, 16 :: (load 8 from %fixed-stack.1)
      $d9 = L2_loadrd_io killed $r29, 8 :: (load 8 from %fixed-stack.0)
    }
    $d15 = L4_return killed $r30, <0x8cab320> = !{!"unison-memory-partition", i64 3}, implicit-def $pc, implicit-def $r29, implicit killed $framekey, implicit-def dead $pc, implicit killed $r0, implicit $d8, implicit $d9

...
