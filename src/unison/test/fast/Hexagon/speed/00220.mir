--- |
  ; ModuleID = '00220.ll'
  source_filename = "./tests/single-exec/00220.c"
  target datalayout = "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048"
  target triple = "hexagon"
  
  @__const.main.s = private unnamed_addr constant [21 x i32] [i32 104, i32 101, i32 108, i32 108, i32 111, i32 36, i32 36, i32 20320, i32 22909, i32 162, i32 162, i32 19990, i32 30028, i32 8364, i32 8364, i32 119, i32 111, i32 114, i32 108, i32 100, i32 0], align 8
  @.str = private unnamed_addr constant [6 x i8] c"%04X \00", align 1
  
  ; Function Attrs: nounwind
  define dso_local i32 @main() local_unnamed_addr #0 {
  for.body.preheader:
    %s = alloca [21 x i32], align 8
    %0 = bitcast [21 x i32]* %s to i8*
    call void @llvm.lifetime.start.p0i8(i64 84, i8* nonnull %0) #4
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 8 %0, i8* align 8 bitcast ([21 x i32]* @__const.main.s to i8*), i32 84, i1 false)
    %cgep = getelementptr [21 x i32], [21 x i32]* %s, i32 0, i32 1
    %scevgep1 = bitcast i32* %cgep to [21 x i32]*
    br label %for.body
  
  for.body:                                         ; preds = %for.body, %for.body.preheader
    %lsr.iv = phi [21 x i32]* [ %3, %for.body ], [ %scevgep1, %for.body.preheader ]
    %1 = phi i32 [ %2, %for.body ], [ 104, %for.body.preheader ]
    %lsr.iv3 = bitcast [21 x i32]* %lsr.iv to i32*
    %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i32 %1)
    %2 = load i32, i32* %lsr.iv3, align 4, !tbaa !2
    %tobool = icmp eq i32 %2, 0
    %cgep4 = getelementptr [21 x i32], [21 x i32]* %lsr.iv, i32 0, i32 1
    %3 = bitcast i32* %cgep4 to [21 x i32]*
    br i1 %tobool, label %for.end, label %for.body
  
  for.end:                                          ; preds = %for.body
    %4 = bitcast [21 x i32]* %s to i8*
    %putchar = tail call i32 @putchar(i32 10)
    call void @llvm.lifetime.end.p0i8(i64 84, i8* nonnull %4) #4
    ret i32 0
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i1) #1
  
  ; Function Attrs: nounwind
  declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #2
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1
  
  ; Function Attrs: nounwind
  declare i32 @putchar(i32) local_unnamed_addr #3
  
  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) #4
  
  attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { argmemonly nounwind "target-cpu"="hexagonv5" }
  attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv5" "target-features"="-long-calls" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #3 = { nounwind "target-cpu"="hexagonv5" }
  attributes #4 = { nounwind }
  
  !llvm.module.flags = !{!0}
  !llvm.ident = !{!1}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{!"clang version 9.0.0 (http://llvm.org/git/clang.git 4e215e73ed6b499f3ccf23263c96cd188e0eda2c) (git@github.com:unison-code/llvm.git 9914ec00db7eeaf764045b9071638c2421cd32e7)"}
  !2 = !{!3, !3, i64 0}
  !3 = !{!"int", !4, i64 0}
  !4 = !{!"omnipotent char", !5, i64 0}
  !5 = !{!"Simple C/C++ TBAA"}

...
---
name:            main
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       
  - { id: 0, class: intregs, preferred-register: '' }
  - { id: 1, class: intregs, preferred-register: '' }
  - { id: 2, class: intregs, preferred-register: '' }
  - { id: 3, class: intregs, preferred-register: '' }
  - { id: 4, class: intregs, preferred-register: '' }
  - { id: 5, class: intregs, preferred-register: '' }
  - { id: 6, class: intregs, preferred-register: '' }
  - { id: 7, class: intregs, preferred-register: '' }
  - { id: 8, class: intregs, preferred-register: '' }
  - { id: 9, class: intregs, preferred-register: '' }
  - { id: 10, class: intregs, preferred-register: '' }
  - { id: 11, class: intregs, preferred-register: '' }
  - { id: 12, class: intregs, preferred-register: '' }
  - { id: 13, class: predregs, preferred-register: '' }
  - { id: 14, class: predregs, preferred-register: '' }
  - { id: 15, class: intregs, preferred-register: '' }
  - { id: 16, class: intregs, preferred-register: '' }
  - { id: 17, class: intregs, preferred-register: '' }
liveins:         []
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    8
  adjustsStack:    false
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           
  - { id: 0, name: s, type: default, offset: 0, size: 84, alignment: 8, 
      stack-id: 0, callee-saved-register: '', callee-saved-restored: true, 
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
constants:       []
body:             |
  bb.0.for.body.preheader (freq 8):
    successors: %bb.1(100)
  
    ANNOTATION_LABEL <0x9126ef0> = !{!"unison-block-frequency", i64 8}
    %6:intregs = A2_tfrsi @__const.main.s
    %7:intregs = PS_fi %stack.0.s, 0
    %8:intregs = A2_tfrsi 84
    ADJCALLSTACKDOWN 0, 0, implicit-def $r29, implicit-def dead $r30, implicit $r31, implicit $r30, implicit $r29
    $r0 = COPY %7
    $r1 = COPY killed %6
    $r2 = COPY killed %8
    J2_call &memcpy, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $r29, implicit-def dead $r0
    ADJCALLSTACKUP 0, 0, implicit-def dead $r29, implicit-def dead $r30, implicit-def dead $r31, implicit $r29
    %0:intregs = S2_setbit_i killed %7, 2
    %5:intregs = A2_tfrsi 104
    %11:intregs = A2_tfrsi @.str
  
  bb.1.for.body (freq 255):
    successors: %bb.2(3), %bb.1(96)
  
    ANNOTATION_LABEL <0x9112e30> = !{!"unison-block-frequency", i64 255}
    %1:intregs = PHI %0, %bb.0, %4, %bb.1
    %2:intregs = PHI %5, %bb.0, %3, %bb.1
    %10:intregs = COPY $r29
    S2_storeri_io killed %10, 0, killed %2, <0x9112f20> = !{!"unison-memory-partition", i64 0} :: (store 4 into stack)
    ADJCALLSTACKDOWN 4, 0, implicit-def $r29, implicit-def dead $r30, implicit $r31, implicit $r30, implicit $r29
    $r0 = COPY %11
    J2_call @printf, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    ADJCALLSTACKUP 4, 0, implicit-def dead $r29, implicit-def dead $r30, implicit-def dead $r31, implicit $r29
    %3:intregs, %4:intregs = L2_loadri_pi killed %1, 4, <0x9112f20> = !{!"unison-memory-partition", i64 0} :: (load 4 from %ir.lsr.iv3, !tbaa !2)
    %13:predregs = C2_cmpeqi %3, 0
    J2_jumpf killed %13, %bb.1, implicit-def dead $pc
    J2_jump %bb.2, implicit-def dead $pc
  
  bb.2.for.end (freq 8):
    liveouts: $pc, $r0
  
    ANNOTATION_LABEL <0x9126ef0> = !{!"unison-block-frequency", i64 8}
    %15:intregs = A2_tfrsi 10
    ADJCALLSTACKDOWN 0, 0, implicit-def $r29, implicit-def dead $r30, implicit $r31, implicit $r30, implicit $r29
    $r0 = COPY killed %15
    J2_call @putchar, hexagoncsr, implicit-def dead $pc, implicit-def dead $r31, implicit $r29, implicit killed $r0, implicit-def $r29, implicit-def dead $r0
    ADJCALLSTACKUP 0, 0, implicit-def dead $r29, implicit-def dead $r30, implicit-def dead $r31, implicit $r29
    %17:intregs = A2_tfrsi 0
    $r0 = COPY killed %17
    PS_jmpret $r31, implicit-def dead $pc, implicit killed $r0

...
